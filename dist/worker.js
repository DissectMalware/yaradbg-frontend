var worker;(()=>{if("function"==typeof importScripts){function t(t,e){let r=0,l=[],s=null,o=function(t){let e=[],r=t,n=!1,l=!1,s=null;for(let t=0;t<r.length;t++){if(s=r[t].split(/[ ,]/),"chr"==s[0])n=s[1].startsWith("?")?0:15,l=s[1].endsWith("?")?0:240,s[1]=parseInt(s[1].replace("?","0"),16),s.push(l|n);else if("chrc"==s[0])for(let t=1;t<s.length;t++)s[t]=parseInt(s[t],16);else"jmp"==s[0]?s[1]=i(t,s[1]):s[0].startsWith("split")?(s[1]=i(t,s[1]),s[2]=i(t,s[2])):"ignore"==s[0]&&(s[1]=parseInt(s[1]),s[2]=parseInt(s[2]));e.push(s)}return e}(e);"chr"==o[0][0]&&o[0][1];let p=[];for(let t=0;t<10;t++)p.push({pc:0,priority:0});let a=performance.now();for(;r<t.length&&(s=n(t,o,r,p),null!=s);)r=s.start+1,l.push(s);return(performance.now()-a).toString(),l}function e(t,e,r){let n=null;return 0!=t.length?(n=t.pop(),n.pc=e,n.priority=r):n={pc:e,priority:r},n}function r(t,e){t.push(...e),e.length=0}function n(t,n,i,s){let o=[];o.push(e(s,0,0));let p=[],a=0,c=null,h=null,u=!1,f=null,g=[],d=null,y=!1;for(let m=i;m<t.length;m++){y=!1;for(let r=0;r<o.length&0==y;r++)switch(a=o[r].pc,h=n[a],c=h[0],c){case"chr":if(u=0==h[2]||h[1]==(t[m]&h[2]),!1===u){if(0==g.length)break;d=g.pop(),m=d.end,a=d.ignore_loc,d.end-=1,d.start<=d.end&&g.push(d)}l(p,e(s,a+1,o[r].priority));break;case"chrc":let n=1+(t[m]>>3),c=1<<(7&t[m]);if(u=0!=(h[n]&c),!1===u){if(0==g.length)break;d=g.pop(),m=d.end,a=d.ignore_loc,d.end-=1,d.start<=d.end&&g.push(d)}p.push(e(s,a+1,o[r].priority));break;case"ignore":-1==h[2]&&(h[2]=t.length),g.push({start:m+h[1]-1,end:m+h[2]-1,ignore_loc:a}),m=m+h[1]-1,l(p,e(s,a+1,o[r].priority));break;case"splitjmp":l(o,e(s,h[1],o[r].priority)),l(o,e(s,h[2],o[r].priority+1));break;case"splitstay":case"split":l(o,e(s,h[1],o[r].priority+1)),l(o,e(s,h[2],o[r].priority));break;case"jmp":l(o,e(s,h[1],o[r].priority));break;case"match":(null==f||f.end<m-1)&&(f={start:i,end:m-1,match:!0}),y=!0}if(0==p.length){if(null!=f)return f;r(s,o),i=m+1,o.push(e(s,0,0))}else r(s,o),o=p,p=[]}return f}function l(t,e){t.push(e);let r=t.length-1;for(let e=t.length-2;e>=0&&t[r].priority<t[e].priority;e--){let n=t[r];t[r]=t[e],t[e]=n,r=e}}function i(t,e){let r=e;return e.startsWith("[")?(r=e.substr(1,e.length-2),r=parseInt(r)+t):r=parseInt(r),r}self.importScripts("operators.js"),self.onmessage=function(e){let r=e.data,n=function(e,r){let n={strings:new Map,condition:[]};return Object.keys(r).forEach((function(l){"string"==l?function(e,r,n){let l=null;for(let t=0;t<e.length;t++)n.set(e[t].str_name.slice(1),[]);for(const i in e){let s=e[i];if("hex_exp_bytecode"==s.type||"regex_expression_bytecode"==s.type){if(l=t(r,s.val),null!=l)for(let t=0;t<l.length;t++)n.get(s.str_name.slice(1)).push({string:s,start:l[t].start,end:l[t].end})}else if("literal_string"==s.type){let e=!1,i=!1,o=!1;for(let t=0;t<s.modifiers.length;t++)switch(s.modifiers[t].modifier){case"nocase":e=!0;break;case"ascii":i=!0;break;case"wide":o=!0}0==o&&(i=!0);let p=[];s.val=s.val.substr(1,s.val.length-2);for(let t=0;t<s.val.length;t++)p.push(`chr ${s.val.charCodeAt(t).toString(16)}`);if(p.push("match"),l=t(r,p),null!=l)for(let t=0;t<l.length;t++)n.get(s.str_name.slice(1)).push({string:s,start:l[t].start,end:l[t].end})}}}(r[l],e,n.strings):"condition"==l&&operators.eval_condition(e,r[l],n)})),n}(r.file,r.rule);self.postMessage(n)}}worker={}})();